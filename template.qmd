---
title: Final Project Report PHYS 360
author: Thomas Gredig
date: 2025-04-28
abstract: |
  This project models the drop of a tandem skydiver from airplane exit to landing, incorporating the effects of air resistance, variable cross-sectional area (open and closed parachute), and atmospheric density changes with altitude. The simulation tracks position, and velocity over time, accounting for different parachute deployment times and body masses. Because of time-varying drag and complex force interactions, the system lacks a general analytic solution, making it well-suited for numerical methods. Key outputs include trajectory plots with results compared to real-world data for validation.

format:
  phys360-html: default
  phys360-pdf: default
---


## Introduction

This proposal is to simulate the vertical motion of a tandem skydiver who jumps out of an airplane, experiences free fall, and then deploys a parachute before landing. The simulation will incorporate air resistance (drag), varying cross-sectional area (before and after parachute deployment), and changes in acceleration due to these forces. Parameters include the mass of the person jumping and/or two persons, the terminal velocity, and the drag coefficients. Other interesting elements could be the atmosphere density changes as a function of height. This system does not have an analytic solution for all conditions, especially with time-varying drag, making it an ideal candidate for numerical modeling. There is also experimental data available for comparison.

## Objectives

- Simulate position, velocity of a skydiver 
- Free fall until terminal velocity is reached (drag), then open the parachute
- Compare results for different parachute deployment times.
- Investigate terminal velocity in both the free fall and parachute phases. Use different masses and conditions.
- Explore the sensitivity of impact velocity to changes in drag coefficient, mass, and parachute area.
- Produce plots of velocity vs. time time, and altitude vs. time.
- Compare numerical data with realistic data collected from videos, etc. 

Code is based on NumPy and MatPlotLib; the ODE is solved with `odeint()` from SciPy. 

```{python}
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint
```

## Model

Use Newton's law with drag with the initial condition of height = 5000m and a mass of 140 kg (tandem); $\beta=1.2$ for free-fall, and $\beta=3.2$ for when the parachute is open.

$$
m \frac{d^2x}{dt^2} = \beta v^2 -mg
$$

```{python}
def newton_drag(y, t, m):
  g = 9.81
  x, v = y
  beta = 1.2 # free-fall
  if t>40: beta = 3.2 # parachute open
  dx = v
  dy = beta/m*v**2 - g
  return [dx, dy]
```


### Simulation

In this simulation, we explore 2000s, but cut off, once the skydivers hit the ground.

```{python}
# initial conditions
t = np.linspace(0,2000, 20_000)
y0 = [5000, 0]
m = 140 # tandem parachutists
sol = odeint(newton_drag, y0, t, args=(m,))
my_label = ["height (m)","speed (m/s)"]

x_vec = sol.T[0]
n_hit_ground = np.where(x_vec<0)[0][0]
t_vec = t[:n_hit_ground]
sol = sol[:n_hit_ground,:]
```

### Graph

The plot in @fig-freefall shows that the terminal speed for free fall is quickly reached. When the parachute opens, it speed is reduced. The drop only takes a few minutes.

```{python}
#| fig-cap: Free fall with drag. 
#| label: fig-freefall

fig, ax = plt.subplots(2,1, sharex=True)
for i in range(2):
  ax[i].plot(t_vec, sol.T[i])
  ax[i].set_ylabel(my_label[i])
ax[1].set_xlabel("time (s)")
plt.show()
```


## Summary

As shown in @fig-freefall, the terminal velocity approaches almost 25 m/s, which would be 90 km/s. The flight only takes a few minutes.

